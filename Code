import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from scipy.optimize import minimize

-# Определение функции
def objective_function(x1, x2):
    return (x1 - 2) ** 2 + (x2 - 1) ** 2

-# Первый этап: Построение сетки и линий уровней функции
def plot_contour_and_surface():
    x1_range = np.arange(-1, 4.5, 0.5)
    x2_range = np.arange(-1, 4.5, 0.5)
    x1_grid, x2_grid = np.meshgrid(x1_range, x2_range)
    z_values = objective_function(x1_grid, x2_grid)

    fig = plt.figure(figsize=(12, 6))
    ax1 = fig.add_subplot(121)
    ax2 = fig.add_subplot(122, projection='3d')

    contour = ax1.contour(x1_grid, x2_grid, z_values, levels=20, cmap='viridis')
    ax1.set_title('Линии уровней функции')

    ax2.plot_surface(x1_grid, x2_grid, z_values, cmap='viridis', alpha=0.8)
    ax2.set_title('3D-график функции')

    plt.show()

-# Второй этап: Поиск минимума функции с учетом функциональных ограничений
def find_minimum_with_constraints():
    def objective_function_opt(x):
        return (x[0] - 2) ** 2 + (x[1] - 1) ** 2

    def constraint1(x):
        return x[0] - 2 * x[1] + 1

    def constraint2(x):
        return -0.25 * x[0] ** 2 - x[1] ** 2 + 1

    bounds = ((-1, 4), (-1, 4))
    constraints = ({'type': 'ineq', 'fun': constraint1}, {'type': 'ineq', 'fun': constraint2})

    result = minimize(objective_function_opt, (0, 0), bounds=bounds, constraints=constraints)

    print("Минимум функции:", result.fun)
    print("Значения переменных x1, x2:", result.x)

-# Третий этап: Изменение области допустимых значений и поиск условного минимума
def find_conditional_minimum():
    def updated_constraint1(x):
        return x[0] - 2 * x[1] + 1

    def updated_constraint2(x):
        return -0.25 * x[0] ** 2 - x[1] ** 2 + 1.5  # Измененное ограничение

    updated_constraints = ({'type': 'ineq', 'fun': updated_constraint1}, {'type': 'ineq', 'fun': updated_constraint2})

    updated_result = minimize(objective_function_opt, (0, 0), bounds=bounds, constraints=updated_constraints)

    print("\nУсловный минимум функции:", updated_result.fun)
    print("Значения переменных x1, x2:", updated_result.x)

if __name__ == "__main__":
    plot_contour_and_surface()
    find_minimum_with_constraints()
    find_conditional_minimum()
